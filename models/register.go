// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Register register
//
// swagger:model Register
type Register struct {

	// address
	// Min Length: 2
	Address string `json:"Address,omitempty"`

	// d o b
	// Required: true
	DOB *string `json:"DOB"`

	// email
	// Required: true
	Email *string `json:"Email"`

	// name
	// Required: true
	// Min Length: 2
	Name *string `json:"Name"`

	// phone
	// Required: true
	// Max Length: 10
	// Min Length: 10
	Phone *string `json:"Phone"`

	// user Id
	// Read Only: true
	UserID int64 `json:"userId,omitempty"`
}

// Validate validates this register
func (m *Register) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDOB(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhone(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Register) validateAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.Address) { // not required
		return nil
	}

	if err := validate.MinLength("Address", "body", string(m.Address), 2); err != nil {
		return err
	}

	return nil
}

func (m *Register) validateDOB(formats strfmt.Registry) error {

	if err := validate.Required("DOB", "body", m.DOB); err != nil {
		return err
	}

	return nil
}

func (m *Register) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("Email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *Register) validateName(formats strfmt.Registry) error {

	if err := validate.Required("Name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("Name", "body", string(*m.Name), 2); err != nil {
		return err
	}

	return nil
}

func (m *Register) validatePhone(formats strfmt.Registry) error {

	if err := validate.Required("Phone", "body", m.Phone); err != nil {
		return err
	}

	if err := validate.MinLength("Phone", "body", string(*m.Phone), 10); err != nil {
		return err
	}

	if err := validate.MaxLength("Phone", "body", string(*m.Phone), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Register) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Register) UnmarshalBinary(b []byte) error {
	var res Register
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
