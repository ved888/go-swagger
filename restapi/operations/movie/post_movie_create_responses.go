// Code generated by go-swagger; DO NOT EDIT.

package movie

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"go-swagger/models"
)

// PostMovieCreateOKCode is the HTTP code returned for type PostMovieCreateOK
const PostMovieCreateOKCode int = 200

/*
PostMovieCreateOK create the movie operations

swagger:response postMovieCreateOK
*/
type PostMovieCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.Movie `json:"body,omitempty"`
}

// NewPostMovieCreateOK creates PostMovieCreateOK with default headers values
func NewPostMovieCreateOK() *PostMovieCreateOK {

	return &PostMovieCreateOK{}
}

// WithPayload adds the payload to the post movie create o k response
func (o *PostMovieCreateOK) WithPayload(payload *models.Movie) *PostMovieCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post movie create o k response
func (o *PostMovieCreateOK) SetPayload(payload *models.Movie) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMovieCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostMovieCreateDefault failed to create movie

swagger:response postMovieCreateDefault
*/
type PostMovieCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMovieCreateDefault creates PostMovieCreateDefault with default headers values
func NewPostMovieCreateDefault(code int) *PostMovieCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostMovieCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post movie create default response
func (o *PostMovieCreateDefault) WithStatusCode(code int) *PostMovieCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post movie create default response
func (o *PostMovieCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post movie create default response
func (o *PostMovieCreateDefault) WithPayload(payload *models.Error) *PostMovieCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post movie create default response
func (o *PostMovieCreateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMovieCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
