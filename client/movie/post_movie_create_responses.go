// Code generated by go-swagger; DO NOT EDIT.

package movie

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"go-swagger/models"
)

// PostMovieCreateReader is a Reader for the PostMovieCreate structure.
type PostMovieCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMovieCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostMovieCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostMovieCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostMovieCreateOK creates a PostMovieCreateOK with default headers values
func NewPostMovieCreateOK() *PostMovieCreateOK {
	return &PostMovieCreateOK{}
}

/*
PostMovieCreateOK handles this case with default header values.

create the movie operations
*/
type PostMovieCreateOK struct {
	Payload *models.Movie
}

func (o *PostMovieCreateOK) Error() string {
	return fmt.Sprintf("[POST /movie/create][%d] postMovieCreateOK  %+v", 200, o.Payload)
}

func (o *PostMovieCreateOK) GetPayload() *models.Movie {
	return o.Payload
}

func (o *PostMovieCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Movie)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMovieCreateDefault creates a PostMovieCreateDefault with default headers values
func NewPostMovieCreateDefault(code int) *PostMovieCreateDefault {
	return &PostMovieCreateDefault{
		_statusCode: code,
	}
}

/*
PostMovieCreateDefault handles this case with default header values.

failed to create movie
*/
type PostMovieCreateDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post movie create default response
func (o *PostMovieCreateDefault) Code() int {
	return o._statusCode
}

func (o *PostMovieCreateDefault) Error() string {
	return fmt.Sprintf("[POST /movie/create][%d] PostMovieCreate default  %+v", o._statusCode, o.Payload)
}

func (o *PostMovieCreateDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostMovieCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
