// Code generated by go-swagger; DO NOT EDIT.

package movie

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"go-swagger/models"
)

// GetMovieGetReader is a Reader for the GetMovieGet structure.
type GetMovieGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMovieGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMovieGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetMovieGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMovieGetOK creates a GetMovieGetOK with default headers values
func NewGetMovieGetOK() *GetMovieGetOK {
	return &GetMovieGetOK{}
}

/*
GetMovieGetOK handles this case with default header values.

get the movie operations
*/
type GetMovieGetOK struct {
	Payload *models.Movie
}

func (o *GetMovieGetOK) Error() string {
	return fmt.Sprintf("[GET /movie/get][%d] getMovieGetOK  %+v", 200, o.Payload)
}

func (o *GetMovieGetOK) GetPayload() *models.Movie {
	return o.Payload
}

func (o *GetMovieGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Movie)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMovieGetDefault creates a GetMovieGetDefault with default headers values
func NewGetMovieGetDefault(code int) *GetMovieGetDefault {
	return &GetMovieGetDefault{
		_statusCode: code,
	}
}

/*
GetMovieGetDefault handles this case with default header values.

failed to get movie
*/
type GetMovieGetDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get movie get default response
func (o *GetMovieGetDefault) Code() int {
	return o._statusCode
}

func (o *GetMovieGetDefault) Error() string {
	return fmt.Sprintf("[GET /movie/get][%d] GetMovieGet default  %+v", o._statusCode, o.Payload)
}

func (o *GetMovieGetDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMovieGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
